package com.yourproject.controller;

import com.yourproject.model.Form;
import com.yourproject.model.Response;
import com.yourproject.repository.FormRepository;
import com.yourproject.repository.ResponseRepository;
import lombok.Data;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.security.Principal;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/api/user")
public class UserController {

    @Autowired
    private FormRepository formRepo;

    @Autowired
    private ResponseRepository responseRepo;

    // ✅ API to get forms assigned to the logged-in user
    @GetMapping("/forms/assigned")
    public List<Form> getAssignedForms(Principal principal) {
        String employeeId = principal.getName();
        return formRepo.findAll().stream()
                .filter(f -> f.getTargetUserIds().contains(employeeId))
                .collect(Collectors.toList());
    }

    // ✅ API to submit or update a form response
    @PostMapping("/forms/{formId}/submit")
    public ResponseEntity<?> submitResponse(@PathVariable String formId,
                                            @RequestBody SubmitRequest req,
                                            Principal principal) {
        String employeeId = principal.getName();
        Optional<Form> optionalForm = formRepo.findById(formId);
        if (optionalForm.isEmpty()) return ResponseEntity.notFound().build();

        Response response = responseRepo.findByFormIdAndUserId(formId, employeeId)
                .orElse(new Response());

        response.setFormId(formId);
        response.setUserId(employeeId);
        response.setAnswers(req.getAnswers());

        responseRepo.save(response);
        return ResponseEntity.ok("Response submitted successfully");
    }

    @Data
    public static class SubmitRequest {
        private Map<String, Object> answers;
    }
}
